name: macos-11
on:
  workflow_dispatch:
jobs:
  action:
    runs-on: windows-2022
    steps:
      - uses: actions/checkout@v3
        with:
          path: repo
      - name: Prepare job
        shell: bash
        run: |
          mv repo /tmp/
      - name: Prepare env
        shell: cmd
        run: |
          echo ZEROTIER_DIR=%ProgramData%\ZeroTier\One>> %GITHUB_ENV%
          echo MD5=md5>> %GITHUB_ENV%
      - name: Install ZeroTier
        shell: cmd
        run: |
          cd /tmp/repo
          echo ----------------- DOWNLOAD -----------------
          curl -o install.msi https://download.zerotier.com/dist/ZeroTier%%20One.msi
          echo ----------------- INSTALL -----------------
          msiexec /quiet /qn /i install.msi
          echo msiexec exit
          echo %ProgramFiles%\ZeroTier\One>> %GITHUB_PATH%
          echo %ProgramFiles(x86)%\ZeroTier\One>> %GITHUB_PATH%
      - name: Setup ZeroTier
        shell: bash
        run: |
          echo Waiting for end of installation
          while ! zerotier-cli.bat info; do sleep 1; done
          echo Waiting for online
          while ! [[ $(zerotier-cli.bat info | grep ONLINE) ]]; do sleep 1; done
          zerotier-cli.bat info
          echo ----------------- STOP SERVICE -----------------
          net stop ZeroTierOneService
          sleep 5
          echo ----------------- CREATE IDENTITY -----------------
          echo -n "${{ secrets.IDENTITY }}" > identity.secret
          zerotier-idtool.bat getpublic identity.secret > identity.public
          ls -la
          #$MD5 identity.*
          echo ----------------- ADJUST CONFIGURATION -----------------
          rm -f "$ZEROTIER_DIR/"identity.* "$ZEROTIER_DIR/authtoken.secret" "$ZEROTIER_DIR/planet"
          rm -Rf "$ZEROTIER_DIR/controller.d" "$ZEROTIER_DIR/peers.d"
          ls -la "$ZEROTIER_DIR"
          mv identity.secret "$ZEROTIER_DIR/"
          mv identity.public "$ZEROTIER_DIR/"
          ls -la "$ZEROTIER_DIR"
          #$MD5 "$ZEROTIER_DIR/"*
          echo ----------------- START SERVICE -----------------
          net start ZeroTierOneService
          sleep 5
          echo ----------------- JOIN NETWORK -----------------
          zerotier-cli.bat join ${{ secrets.NETWORK_ID }}
      - name: Create SSH Keys
        shell: bash
        run: |
          cd /tmp/repo
          echo -n "${{ secrets.HOST_KEY }}" > host_key
          echo -n "${{ secrets.CLIENT_KEY }}" > authorized_keys
          chmod 600 host_key
          ls -la
          #$MD5 *
      - name: Your work starts here
        shell: bash
        run: |
          cd /tmp/repo
          #------------ Exported GitHub Actions context values starts here ------------
          #
          # For simple values use:
          # export GHCTX_GITHUB_ACTOR='${{ github.actor }}'
          #
          # For more complex values you can use here documents syntax:
          # export GHCTX_SECRETS_MY_SECRET=$(cat <<'EnDOfThIssTrIng'
          # ${{ secrets.my_secret }}
          # EnDOfThIssTrIng
          # )
          #
          export GHCTX_GITHUB_WORKSPACE='${{ github.workspace }}'
          export GHCTX_GITHUB_ACTOR='${{ github.actor }}'
          export GHCTX_GITHUB_TOKEN='${{ github.token }}'
          export GHCTX_SECRETS_GITHUB_TOKEN='${{ secrets.GITHUB_TOKEN }}'
          #------------- Exported GitHub Actions context values ends here -------------
          ./manage.sh conf
          echo "cd \"${{ github.workspace }}\"" >> job_vars
          sudo cp exit_job /usr/local/bin/
          cp job_vars /tmp/
          cp bash_history ~/.bash_history
          mkfifo /tmp/log
          mkdir /tmp/artifact
          while true; do cat < /tmp/log; done &
          ./manage.sh start
      - name: Upload an Artifact
        uses: actions/upload-artifact@v3
        with:
          path: /tmp/artifact/*
          if-no-files-found: ignore
          retention-days: 5
