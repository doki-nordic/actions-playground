name: macos-11
on:
  workflow_dispatch:
jobs:
  action:
    runs-on: windows-2022
    steps:
      - uses: actions/checkout@v3
        with:
          path: repo
      - name: Move repo to temporary location
        shell: cmd
        run: |
          move repo ${{ runner.temp }}\
      - name: Move repo to temporary location
        working-directory: ${{ runner.temp }}/repo
        shell: bash
        run: |
          pwd
          ls -la .
          ls -la ..
          false
      - name: Prepare environment
        shell: cmd
        run: |
          echo ZEROTIER_DIR=%ProgramData%\ZeroTier\One>> %GITHUB_ENV%
          netsh advfirewall firewall add rule name="ALLOW TCP PORT 9852" dir=in action=allow protocol=TCP localport=9852
      - name: Install ZeroTier
        shell: cmd
        run: |
          cd /d C:\Users\runneradmin\AppData\Local\Temp\repo
          dir C:\Users\runneradmin\AppData\Local\Temp
          dir C:\Users\runneradmin\AppData\Local\Temp\repo
          echo ----------------- DOWNLOAD -----------------
          curl -o install.msi https://download.zerotier.com/dist/ZeroTier%%20One.msi
          echo ----------------- INSTALL -----------------
          msiexec /quiet /qn /i install.msi
          echo msiexec exit
          echo %ProgramFiles%\ZeroTier\One>> %GITHUB_PATH%
          echo %ProgramFiles(x86)%\ZeroTier\One>> %GITHUB_PATH%
      - name: Setup ZeroTier identity
        shell: bash
        run: |
          cd /tmp/repo
          echo Waiting for end of installation
          while ! zerotier-cli.bat info; do sleep 1; done
          echo Waiting for online status
          while ! [[ $(zerotier-cli.bat info | grep ONLINE) ]]; do sleep 1; done
          zerotier-cli.bat info
          echo ----------------- STOP SERVICE -----------------
          net stop ZeroTierOneService
          sleep 5
          echo ----------------- CREATE IDENTITY -----------------
          echo -n "${{ secrets.IDENTITY }}" > identity.secret
          zerotier-idtool.bat getpublic identity.secret > identity.public
          ls -la
          echo ----------------- ADJUST CONFIGURATION -----------------
          rm -f "$ZEROTIER_DIR/identity.secret" "$ZEROTIER_DIR/identity.public"
          ls -la "$ZEROTIER_DIR"
          mv identity.secret "$ZEROTIER_DIR/"
          mv identity.public "$ZEROTIER_DIR/"
          ls -la "$ZEROTIER_DIR"
          echo ----------------- START SERVICE -----------------
          net start ZeroTierOneService
          echo Waiting for online status
          while ! [[ $(zerotier-cli.bat info | grep ONLINE) ]]; do sleep 1; done
          zerotier-cli.bat info
          echo ----------------- JOIN NETWORK -----------------
          zerotier-cli.bat join ${{ secrets.NETWORK_ID }}
          zerotier-cli.bat listnetworks
      - name: Load SSH Keys
        shell: bash
        run: |
          cd /tmp/repo
          echo -n "${{ secrets.HOST_KEY }}" > host_key
          echo -n "${{ secrets.CLIENT_KEY }}" > authorized_keys
          chmod 600 host_key
          ls -la
      - name: Copy context to variables
        shell: bash
        run: |
          cd /tmp/repo
          #------------ Exported GitHub Actions context values starts here ------------
          cat > ctx_vars.txt <<'EnDOfThIssTrIng'
          aSsIgNCtXVaR: GHCTX_GITHUB_WORKSPACE=${{ github.workspace }}
          aSsIgNCtXVaR: GHCTX_GITHUB_ACTOR=${{ github.actor }}
          aSsIgNCtXVaR: GHCTX_GITHUB_TOKEN=${{ github.token }}
          aSsIgNCtXVaR: GHCTX_SECRETS_GITHUB_TOKEN=${{ secrets.GITHUB_TOKEN }}
          EnDOfThIssTrIng
          #------------- Exported GitHub Actions context values ends here -------------
      - name: Setup bash tools
        shell: bash
        run: |
          cd /tmp/repo

          #--- log FIFO
          mkfifo /tmp/log
          while true; do cat < /tmp/log; done &

          #--- log named pipe
          node scripts/piperedir.js &

          #--- artifact directory
          mkdir /tmp/artifact

          #--- exit_job command
          python3 scripts/templates.py
          cp exit_job /usr/bin/
          cp exit_job.bat /c/Windows/System32/

          #--- examples in bash_history
          cp bash_history ~/.bash_history

      - name: Your work starts here
        shell: cmd
        run: |
          cd /d C:\Users\runneradmin\AppData\Local\Temp\repo
          set LOG=\\.\pipe\log
          set ARTIFACT=C:\Users\runneradmin\AppData\Local\Temp\artifact
          cd
          python3 scripts/env.py "${{ github.workspace }}"
          copy job_vars "C:\Program Files\Git\usr\bin\"
          copy job_vars.bat C:\Windows\System32\
          if not "${{ secrets.PASSWORD }}"=="" net user runneradmin "${{ secrets.PASSWORD }}"
          "C:\Program Files\Git\usr\bin\sshd.exe" -D -p 9852 -f C:\Users\runneradmin\AppData\Local\Temp\repo\sshd.conf
      - name: Upload an Artifact
        uses: actions/upload-artifact@v3
        with:
          path: C:/Users/runneradmin/AppData/Local/Temp/artifact/*
          if-no-files-found: ignore
          retention-days: 5
