name: macos-11
on:
  workflow_dispatch:
jobs:
  action:
    runs-on: windows-2022
    steps:

      - uses: actions/checkout@v3
        with:
          path: repo

      - name: Move repo to temporary location
        shell: cmd
        run: |
          move repo "${{ runner.temp }}\"

      - name: Prepare system
        working-directory: ${{ runner.temp }}/repo
        shell: cmd
        run: |
          echo ----------------- SET ENVIRONMENT VARIABLES -----------------
          echo ZEROTIER_DIR=%ProgramData%\ZeroTier\One>> %GITHUB_ENV%
          echo ZEROTIER_CLI=zerotier-cli.bat>> %GITHUB_ENV%
          echo ZEROTIER_IDTOOL=zerotier-idtool.bat>> %GITHUB_ENV%

          echo ----------------- ADD FIREWALL EXCEPTION -----------------
          netsh advfirewall firewall add rule name="ALLOW TCP PORT 9852" dir=in action=allow protocol=TCP localport=9852

      - name: Install ZeroTier
        working-directory: ${{ runner.temp }}/repo
        shell: cmd
        run: |
          echo ----------------- DOWNLOAD -----------------
          curl -L -o install.msi https://download.zerotier.com/dist/ZeroTier%%20One.msi
          echo ----------------- INSTALL -----------------
          msiexec /quiet /qn /i install.msi
          echo ----------------- SET PATH -----------------
          echo %ProgramFiles%\ZeroTier\One>> %GITHUB_PATH%
          echo %ProgramFiles(x86)%\ZeroTier\One>> %GITHUB_PATH%

      - name: Setup ZeroTier identity
        working-directory: ${{ runner.temp }}/repo
        shell: bash
        run: |
          echo ----------------- WAITING FOR END OF INSTALLATION -----------------
          while ! $ZEROTIER_CLI info; do sleep 1; done

          echo ----------------- WAITING FOR ONLINE STATUS -----------------
          while ! [[ $($ZEROTIER_CLI info | grep ONLINE) ]]; do sleep 1; done
          $ZEROTIER_CLI info

          echo ----------------- STOP SERVICE -----------------
          net stop ZeroTierOneService
          sleep 3

          echo ----------------- CREATE IDENTITY -----------------
          echo -n "${{ secrets.IDENTITY }}" > identity.secret
          $ZEROTIER_IDTOOL getpublic identity.secret > identity.public

          echo ----------------- ADJUST CONFIGURATION -----------------
          rm -f "$ZEROTIER_DIR/identity.secret" "$ZEROTIER_DIR/identity.public"
          ls -la "$ZEROTIER_DIR"
          mv identity.secret "$ZEROTIER_DIR/"
          mv identity.public "$ZEROTIER_DIR/"

          echo ----------------- START SERVICE -----------------
          net start ZeroTierOneService
          echo Waiting for online status
          while ! [[ $($ZEROTIER_CLI info | grep ONLINE) ]]; do sleep 1; done
          $ZEROTIER_CLI info

          echo ----------------- JOIN NETWORK -----------------
          $ZEROTIER_CLI join ${{ secrets.NETWORK_ID }}
          $ZEROTIER_CLI listnetworks

      - name: Load SSH Keys
        working-directory: ${{ runner.temp }}/repo
        shell: bash
        run: |
          echo -n "${{ secrets.HOST_KEY }}" > host_key
          echo -n "${{ secrets.CLIENT_KEY }}" > authorized_keys
          chmod 600 host_key

      - name: Copy context to variables
        working-directory: ${{ runner.temp }}/repo
        shell: bash
        run: |
          #------------ Exported GitHub Actions context values starts here ------------
          cat > ctx_vars.txt <<'EnDOfThIssTrIng'
          aSsIgNCtXVaR: GHCTX_GITHUB_WORKSPACE=${{ github.workspace }}
          aSsIgNCtXVaR: GHCTX_GITHUB_ACTOR=${{ github.actor }}
          aSsIgNCtXVaR: GHCTX_GITHUB_TOKEN=${{ github.token }}
          aSsIgNCtXVaR: GHCTX_SECRETS_GITHUB_TOKEN=${{ secrets.GITHUB_TOKEN }}
          EnDOfThIssTrIng
          #------------- Exported GitHub Actions context values ends here -------------

      - name: Setup bash tools
        working-directory: ${{ runner.temp }}/repo
        shell: bash
        run: |
          #--- log FIFO

          #--- log named pipe

          #--- artifact directory
          #mkdir /tmp/artifact

          #--- exit_job command
          python3 scripts/templates.py
          cp exit_job /usr/bin/
          cp exit_job.bat /c/Windows/System32/

          #--- examples in bash_history
          #cp bash_history ~/.bash_history

          #export LOG=\\\\.\\pipe\\log
          #export LOG_FIFO=/tmp/log
          #set ARTIFACT=${{ runner.temp }}\artifact

      - name: Your work starts here
        working-directory: ${{ runner.temp }}/repo
        shell: cmd
        run: |
          echo ----------------- LOG OVER NAMED PIPE -----------------
          set LOG=\\.\pipe\log
          start "" node scripts\piperedir.js

          echo ----------------- LOG OVER FIFO -----------------
          set LOG_FIFO=/tmp/log
          start "" bash scripts/fiforedir.sh

          echo ----------------- PREPARE ARTIFACT -----------------
          mkdir ${{ runner.temp }}\artifact || call rem
          set ARTIFACT=${{ runner.temp }}\artifact

          echo ----------------- STORE JOB VARIABLES -----------------
          python3 scripts\env.py "${{ github.workspace }}"
          rem copy job_vars "C:\Program Files\Git\usr\bin\"
          rem copy job_vars.bat C:\Windows\System32\
          if not "${{ secrets.PASSWORD }}"=="" net user runneradmin "${{ secrets.PASSWORD }}"
          "C:\Program Files\Git\usr\bin\sshd.exe" -D -p 9852 -f ${{ runner.temp }}\repo\sshd.conf
      - name: Upload an Artifact
        uses: actions/upload-artifact@v3
        with:
          path: ${{ runner.temp }}/artifact/*
          if-no-files-found: ignore
          retention-days: 5
